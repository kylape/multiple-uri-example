<?xml version="1.0" encoding="UTF-8"?>
<!--
  To the extent possible under law, Red Hat, Inc. has dedicated all copyright 
  to this software to the public domain worldwide, pursuant to the CC0 Public 
  Domain Dedication. This software is distributed without any warranty.  See 
  <http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<!-- 
author: Brad Maxwell
Simplified Build
version 0.4 May 28, 2010
Added Help
Adding custom lib directory in build.properties
-->
<project name="simplified-build" default="all">
  <!-- =====  PROPERTIES ===== -->
  <property environment="env"/>
  <basename property="dirName" file="${basedir}"/>
  <property name="parentDir" location="${basedir}/.."/>
  <property file="build.properties"/>
  <condition property="jboss-home" value="${JBOSS_HOME}" else="${env.JBOSS_HOME}">
    <isset property="JBOSS_HOME"/>
  </condition>
  <available file="${jboss-home}/modules" property="AS7"/>
  <condition property="JBOSS_PROFILE" value="standalone" else="default">
    <isset property="AS7"/>
  </condition>
  <condition property="jboss-server" value="${env.JBOSS_PROFILE}" else="${JBOSS_PROFILE}">
    <isset property="env.JBOSS_PROFILE"/>
  </condition>
  <condition property="jboss-server-dir" value="${jboss-home}/${jboss-server}" else="${jboss-home}/server/${jboss-server}">
    <isset property="AS7"/>
  </condition>
  <condition property="jboss-deploy-dir" value="${jboss-server-dir}/deployments/" else="${jboss-server-dir}/deploy/">
    <isset property="AS7"/>
  </condition>
  <property name="jboss-endorsed-dir" location="${jboss-home}/lib/endorsed/"/>
  <condition property="lib" value="${jboss-home}/modules/" else="${jboss-server-dir}/lib">
    <isset property="AS7"/>
  </condition>
  <property name="ant.project.name" value="${dirName}"/>
  <property name="archive.name" value="${dirName}"/>
  <property name="dist" value="dist"/>
  <condition property="debuglevel" value="${debuglevel}" else="lines,vars,source">
    <isset property="debuglevel"/>
  </condition>
  <condition property="debug" value="${debug}" else="on">
    <isset property="debug"/>
  </condition>
  <condition property="archive-type" value="jar">
    <matches string="${dirName}" pattern="^.*\.jar$"/>
  </condition>
  <condition property="archive-type" value="sar">
    <matches string="${dirName}" pattern="^.*\.sar$"/>
  </condition>
  <condition property="archive-type" value="war">
    <matches string="${dirName}" pattern="^.*\.war$"/>
  </condition>
  <condition property="archive-type" value="ear">
    <matches string="${dirName}" pattern="^.*\.ear$"/>
  </condition>
  <condition property="archive-type" value="aop">
    <matches string="${dirName}" pattern="^.*\.aop$"/>
  </condition>
  <condition property="archive-type" value="beans">
    <matches string="${dirName}" pattern="^.*\.beans$"/>
  </condition>
  <basename property="archive-name" file="${basedir}" suffix=".${archive-type}"/>
  <condition property="build" value="true">
    <not>
      <matches string="${archive-type}" pattern="ear"/>
    </not>
  </condition>
  <condition property="ear" value="true">
    <matches string="${archive-type}" pattern="ear"/>
  </condition>
  <condition property="main-class" value="">
    <not>
      <isset property="main-class"/>
    </not>
  </condition>
  <condition property="earLib" value="${parentDir}/lib/" else="">
    <and>
      <matches string="${parentDir}" pattern="^.*\.ear$"/>
      <available file="${parentDir}/lib" type="dir"/>
    </and>
  </condition>
  <condition property="apiJarEarLib" value="../" else="">
    <and>
      <matches string="${dirName}" pattern="^.*-api.jar$"/>
    </and>
  </condition>
  <condition property="buildPath" value="WEB-INF/classes" else="">
    <matches string="${archive-type}" pattern="^war$"/>
  </condition>
  <condition property="buildPath" value="" else=".">
    <matches string="${archive-type}" pattern="^ear$"/>
  </condition>
  <condition property="ear-sub-archives-dir" value="." else="..">
    <matches string="${archive-type}" pattern="^ear$"/>
  </condition>
  <condition property="ear-lib-dir" value="./lib" else="../lib">
    <matches string="${archive-type}" pattern="^ear$"/>
  </condition>
  <condition property="include-build-classpath" value="">
    <not>
      <isset property="include-build-classpath"/>
    </not>
  </condition>
  <fileset dir="${basedir}" id="war.package.fileset">
    <exclude name="**/*.java"/>
    <exclude name="dist/"/>
    <exclude name="build.xml"/>
    <exclude name="build.properties"/>
    <exclude name=".*"/>
  </fileset>
  <fileset dir="${basedir}" id="jar.package.fileset">
    <exclude name="**/*.java"/>
    <exclude name="bin/"/>
    <exclude name="dist/"/>
    <exclude name="build.xml"/>
    <exclude name="build.properties"/>
  </fileset>
  <path id="classpath">
    <pathelement location="${buildPath}"/>
    <fileset dir="${include-build-classpath}" includes="**/*.jar"/>
    <dirset dir="${earLib}">
      <include name="*-api.jar"/>
    </dirset>
    <dirset dir="${ear-sub-archives-dir}">
      <include name="*.jar"/>
      <include name="*.sar"/>
      <include name="*.war/WEB-INF/classes"/>
    </dirset>
    <fileset dir="${jboss-home}/" includes="common/lib/**/*.jar"/>
    <fileset dir="${jboss-home}/" includes="lib/**/*.jar"/>
    <fileset dir="${jboss-home}/" includes="client/**/*.jar"/>
    <fileset dir="${jboss-home}/" includes="jboss-modules.jar"/>
    <fileset dir="${jboss-server-dir}/" includes="lib/**/*.jar"/>
    <fileset dir="${jboss-deploy-dir}/" includes="**/jsf*.jar"/>
    <fileset dir="${jboss-deploy-dir}/" includes="**/portal-*.jar"/>
    <fileset dir="${jboss-deploy-dir}/" includes="**/portlet-*.jar"/>
    <fileset dir="${jboss-deploy-dir}/" includes="*jboss-portal*/**/*.jar"/>
    <fileset dir="${jboss-deploy-dir}/" includes="*ejb3.deployer*/**/*.jar"/>
    <fileset dir="${jboss-server-dir}/" includes="deployers/**/*.jar"/>
    <fileset dir="${earLib}">
      <type type="file"/>
      <include name="**/*.jar"/>
    </fileset>
    <fileset dir="${apiJarEarLib}">
      <include name="**/*.jar"/>
    </fileset>
    <fileset dir="${lib}">
      <include name="**/*.jar"/>
    </fileset>
  </path>
  <path id="ordered-dirs">
    <fileset dir="${basedir}" includes="lib/*-api.jar/build.xml" id="lib-api-dirs"/>
    <fileset dir="${basedir}" includes="lib/*.jar/build.xml" excludes="*-api.jar/build.xml" id="lib-api-dirs2"/>
    <fileset dir="${basedir}" includes="*-api.jar/build.xml" id="api-dirs"/>
    <fileset dir="${basedir}" includes="*.jar/build.xml" id="jar-dirs">
      <and>
        <filename name="*.jar/build.xml"/>
        <filename name="*-api.jar/build.xml" negate="true"/>
        <filename name="*-ejb.jar/build.xml" negate="true"/>
      </and>
    </fileset>
    <fileset dir="${basedir}" includes="*.sar/build.xml" id="sar-dirs"/>
    <fileset dir="${basedir}" includes="*-ejb.jar/build.xml" id="ejb-dirs"/>
    <fileset dir="${basedir}" includes="*.aop/build.xml" id="aop-dirs"/>
    <fileset dir="${basedir}" includes="*.war/build.xml" id="war-dirs"/>
  </path>
  <!-- =============================== -->
  <!-- =====  MACRODEFS ===== -->
  <macrodef name="iterate">
    <attribute name="target"/>
    <sequential>
      <subant target="@{target}" inheritall="false" inheritrefs="false" verbose="false">
        <!-- <reference refid="user-classpath" torefid="user-classpath"/> -->
        <property name="caller" location="."/>
        <property name="main.build" location="${ant.file.main}"/>
        <path refid="ordered-dirs"/>
      </subant>
    </sequential>
  </macrodef>
  <macrodef name="check-env-set">
    <attribute name="var"/>
    <sequential>
      <fail message="Please set the environment variable @{var}" unless="@{var}"/>
    </sequential>
  </macrodef>
  <!-- =====  TARGETS ===== -->
  <condition property="init-type" value="jar" else="${archive-type}">
    <not>
      <matches string="${archive-type}" pattern="^[ew]ar$"/>
    </not>
  </condition>
  <macrodef name="init">
    <sequential>
      <check-env-set var="env.JBOSS_HOME"/>
      <check-env-set var="jboss-server"/>
      <echo>Running ${archive-type} build scripts : ${ant.file}</echo>
      <fail message="Unable to build ${dirName}. It should be a jar, war, ear, ..." unless="archive-type"/>
      <antcall target="${init-type}-init"/>
    </sequential>
  </macrodef>
  <target name="ear-init">
    <mkdir dir="${basedir}/META-INF/"/>
    <mkdir dir="${basedir}/lib/"/>
    <touch file="${basedir}/META-INF/application.xml"/>
  </target>
  <target name="jar-init">
    <mkdir dir="${basedir}/META-INF/"/>
    <touch file="${basedir}/META-INF/MANIFEST.MF"/>
  </target>
  <target name="war-init">
    <mkdir dir="${basedir}/META-INF/"/>
    <mkdir dir="${basedir}/WEB-INF/classes/"/>
    <mkdir dir="${basedir}/WEB-INF/lib/"/>
    <touch file="${basedir}/META-INF/MANIFEST.MF"/>
  </target>
  <!-- END OF INITS -->
  <target name="all">
    <antcall target="build"/>
    <antcall target="package"/>
  </target>
  <target name="clean">
    <init/>
    <delete dir="dist" includeemptydirs="true" quiet="true"/>
    <delete verbose="true">
      <fileset dir="." includes="**/*.class"/>
    </delete>
    <iterate target="clean"/>
  </target>
  <target name="build" if="build">
    <build/>
  </target>
  <macrodef name="build">
    <sequential>
      <init/>
      <iterate target="build"/>
      <condition property="srcpath" value="${basedir}/WEB-INF/classes" else="${basedir}">
        <matches string="${archive-type}" pattern="war"/>
      </condition>
      <condition property="destdir" value="${basedir}/WEB-INF/classes" else="${basedir}">
        <matches string="${archive-type}" pattern="war"/>
      </condition>
      <echo>PROPS: ${srcpath} ${destdir}</echo>
      <javac target="1.5" source="1.5" destdir="${destdir}" debug="${debug}" debuglevel="${debuglevel}">
        <src path="${srcpath}"/>
        <classpath refid="classpath"/>
      </javac>
    </sequential>
  </macrodef>
  <target name="package" depends="build">
    <mkdir dir="dist"/>
    <iterate target="package"/>
    <antcall target="${archive-type}-package"/>
  </target>
  <target name="jar-package">
    <jar-package/>
  </target>
  <target name="aop-package">
    <jar-package/>
  </target>
  <target name="beans-package">
    <jar-package/>
  </target>
  <target name="sar-package">
    <jar-package/>
  </target>
  <macrodef name="jar-package">
    <sequential>
      <jar destfile="dist/${archive.name}" manifest="META-INF/MANIFEST.MF">
        <fileset refid="jar.package.fileset"/>
      </jar>
    </sequential>
  </macrodef>
  <target name="war-build">
    <javac destdir="WEB-INF/classes/" debug="${debug}" debuglevel="${debuglevel}">
      <src path="WEB-INF/classes"/>
      <classpath refid="classpath"/>
    </javac>
  </target>
  <target name="war-package">
    <mkdir dir="dist"/>
    <war destfile="dist/${archive.name}" needxmlfile="false" manifest="META-INF/MANIFEST.MF">
      <fileset refid="war.package.fileset"/>
    </war>
  </target>
  <uptodate property="ear-package.notrequired" targetfile="dist/${archive.name}">
    <srcfiles dir="${basedir}" includes="**/dist/*"/>
  </uptodate>
  <target name="ear-all" depends="">
    <echo>Calling sub archives build</echo>
    <antcall target="ear-package"/>
  </target>
  <target name="ear-package" if="ear">
    <sequential>
      <init/>
      <delete dir="dist" includeemptydirs="true" quiet="true" includes="**/*"/>
      <mkdir dir="packaging"/>
      <mkdir dir="packaging/lib/"/>
      <copy flatten="true" todir="packaging">
        <fileset dir="${basedir}">
          <include name="*/dist/*"/>
        </fileset>
      </copy>
      <copy flatten="true" todir="packaging/lib/">
        <fileset dir="${basedir}/lib">
          <include name="*.jar/dist/*.jar"/>
          <include name="*.jar"/>
          <type type="file"/>
        </fileset>
      </copy>
      <ear destfile="dist/${archive.name}" appxml="META-INF/application.xml">
        <fileset dir="${basedir}">
          <include name="*"/>
          <type type="file"/>
          <exclude name="build.xml"/>
          <exclude name="build.properties"/>
          <exclude name=".*"/>
        </fileset>
        <fileset dir="${basedir}" includes="META-INF/**/*"/>
        <fileset dir="${basedir}/packaging/" includes="**/*"/>
      </ear>
      <delete dir="packaging" includeemptydirs="true" quiet="true"/>
    </sequential>
  </target>
  <property name="distDir" location="./dist/"/>
  <target name="deploy" depends="all">
    <copy todir="${jboss-deploy-dir}" verbose="true">
      <fileset dir="${distDir}" includes="**/*"/>
    </copy>
  </target>
  <target name="undeploy">
    <pathconvert property="undeploy.files" pathsep=" ">
      <mapper type="regexp" from="^${distDir}/(.*)$" to="${jboss-deploy-dir}/\1"/>
      <fileset dir="${distDir}" includes="**/*"/>
    </pathconvert>
    <echo>Undeploy ${undeploy.files}</echo>
    <delete includeemptydirs="true" verbose="true">
      <filelist files="${undeploy.files}"/>
    </delete>
  </target>
  <target name="test" depends="build">
    <echo>${jboss-endorsed-dir}</echo>
    <java classname="${test-client}" fork="true">
      <jvmarg value="-Djava.endorsed.dirs=${jboss-endorsed-dir}"/>
      <jvmarg value="-Djava.security.policy=${auth-conf}"/>
      <jvmarg value="-Djava.awt.headless=true"/>
      <classpath>
        <path refid="classpath"/>
      </classpath>
    </java>
  </target>
  <target name="junit" depends="build">
    <junit fork="false" showoutput="true" printsummary="true" filtertrace="false" haltonfailure="false" outputtoformatters="false">
      <classpath refid="classpath"/>
      <formatter type="plain" usefile="false"/>
      <test name="${test-case}"/>
    </junit>
  </target>
  <target name="export-zip" depends="clean">
    <mkdir dir="${dist}"/>
    <zip destfile="${dist}/${archive-name}-src.zip">
      <fileset dir="../">
        <include name="${archive.name}/**/*"/>
        <exclude name="${dist}"/>
      </fileset>
    </zip>
  </target>
  <target name="export-testcase" depends="clean">
    <echo>This target will split this deployment up into java files and resources which is useful when moving it to the JBoss testsuite</echo>
    <input message="Enter java source directory:" addproperty="testcase.source.dir"/>
    <input message="Enter resource directory:" addproperty="testcase.resource.dir"/>
    <echo>Copying java source to ${testcase.source.dir}</echo>
    <mkdir dir="${testcase.source.dir}"/>
    <copy todir="${testcase.source.dir}">
      <fileset dir=".">
        <include name="**/*.java"/>
      </fileset>
    </copy>
    <echo>Copying resources to ${testcase.resource.dir}</echo>
    <mkdir dir="${testcase.resource.dir}"/>
    <copy todir="${testcase.resource.dir}">
      <fileset dir=".">
        <exclude name="**/*.java"/>
        <exclude name="**/build.xml"/>
        <exclude name="**/build.properties"/>
      </fileset>
    </copy>
  </target>
  <target name="help">
    <echo>archive-name = ${archive-name}</echo>
    <echo>all - builds and packages the archive in the dist/ directory</echo>
    <echo>build - builds the *.java files</echo>
    <echo>clean - deletes the compiled classes *.java and the dist/ directory</echo>
    <echo>deploy - deploys the archive in $JBOSS_HOME/server/$JBOSS_PROFILE - defaults to default, can be set in env variables or build.properties</echo>
    <echo>export-zip - cleans then zips up the source in a zip file in dist/ directory</echo>
    <echo>test - calls build, then runs a test client, the test client class is defined in build.properties property name: test-client</echo>
    <echo>undeploy - undeploys the archive in $JBOSS_HOME/server/$JBOSS_SERVER - defaults to default, can be set in env variables or build.properties</echo>
  </target>
  <target name="mavenize-package" if="ear">
    <sequential>
      <init/>
      <copy todir="${dist}">
        <fileset dir="${basedir}/">
          <include name="*/dist/**/*"/>
        </fileset>
        <regexpmapper from="^.*/dist/(.*)$$" to="\1"/>
      </copy>
    </sequential>
  </target>
  <macrodef name="mavenize-ejb-template">
    <attribute name="outputFile"/>
    <attribute name="project-groupId"/>
    <attribute name="project-artifactId"/>
    <attribute name="project-version"/>
    <attribute name="project-name"/>
    <attribute name="project-description"/>
    <attribute name="parent-groupId"/>
    <attribute name="parent-artifactId"/>
    <attribute name="parent-version"/>
    <attribute name="parent-relativePath"/>
    <attribute name="build-finalName"/>
    <sequential>
      <copy tofile="@{outputFile}/" file="ejb-pom.xml">
        <filterset>
          <filter token="project-groupId" value="@{project-groupId}"/>
          <filter token="project-artifactId" value="@{project-artifactId}"/>
          <filter token="project-version" value="@{project-version}"/>
          <filter token="project-name" value="@{project-name}"/>
          <filter token="project-description" value="@{project-description}"/>
          <filter token="parent-groupId" value="@{parent-groupId}"/>
          <filter token="parent-artifactId" value="@{parent-artifactId}"/>
          <filter token="parent-version" value="@{parent-version}"/>
          <filter token="parent-relativePath" value="@{parent-relativePath}"/>
          <filter token="build-finalName" value="@{build-finalName}"/>
        </filterset>
      </copy>
    </sequential>
  </macrodef>
  <target name="mavenize" depends="clean">
    <mkdir dir="${dist}"/>
    <iterate target="mavenize"/>
    <mkdir dir="${dist}/${archive-name}-${archive-type}"/>
    <echo>mavenize ${dist}/${archive-name}-${archive-type}/pom.xml</echo>
    <mavenize-ejb-template outputFile="${dist}/${archive-name}-${archive-type}/pom.xml" project-groupId="org.jboss.as.quickstarts" project-artifactId="${archive-name}-${archive-type}" project-version="7.1.2.Final-redhat-1" project-name="${archive-name}-${archive-type}" project-description="${archive-name}-${archive-type} description" parent-groupId="org.jboss.as.quickstarts" parent-artifactId="${archive-name}" parent-version="7.1.2.Final-redhat-1" parent-relativePath="../pom.xml" build-finalName="${archive-name}-${archive-type}"/>
    <mkdir dir="${dist}/${archive-name}-${archive-type}/src/main/resources/"/>
    <copy todir="${dist}/${archive-name}-${archive-type}/src/main/resources/">
      <fileset dir="${basedir}">
        <include name="META-INF/**/*"/>
      </fileset>
    </copy>
    <mkdir dir="${dist}/${archive-name}-${archive-type}/src/main/java/"/>
    <copy todir="${dist}/${archive-name}-${archive-type}/src/main/java/">
      <fileset dir="${basedir}">
        <exclude name="dist/**/*"/>
        <exclude name="dist/"/>
        <exclude name="META-INF/"/>
        <exclude name="META-INF/**/*"/>
        <exclude name="build.xml"/>
        <exclude name="build.properties"/>
        <exclude name="*pom.xml"/>
        <exclude name="*.sh"/>
      </fileset>
    </copy>
    <touch file="${dist}/${archive-name}-${archive-type}/pom.xml"/>
    <antcall target="mavenize-package"/>
  </target>
</project>
